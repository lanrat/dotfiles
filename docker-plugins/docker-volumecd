#!/usr/bin/env bash

docker_cli_plugin_metadata() {
	local vendor="lanrat"
	local description="cd to volume location on the host"
	cat <<-EOF
	{"SchemaVersion":"0.1.0","Vendor":"${vendor}","ShortDescription":"${description}"}
EOF
}

usage() {
	echo "Usage: docker volumecd <volume_name>"
	echo ""
	echo "Show the mount point location of a Docker volume on the host."
	echo ""
	echo "Arguments:"
	echo "  volume_name    Name of the volume"
}

docker-volumecd() {
    if [ ! $# -eq 1 ]
    then
        usage
        exit 1
    fi

    if ! docker volume ls -q | grep -q "^$1\$"; then
        echo "volume $1 does not exist!"
        exit 1
    fi

    location="$(docker volume inspect --format "{{.Mountpoint}}" "$1")"
    echo "location: $location"
    #source <(echo " cd $location")
}

# docker completions
_complete_docker_volumes () {
	COMPREPLY=()
	#cur="${COMP_WORDS[COMP_CWORD]}"
	cur="$1"
	comp_docker_volumes="$(docker volume ls -q)"
	COMPREPLY=( $(compgen -W "${comp_docker_volumes}" -- "$cur"))
	if [ "${#COMPREPLY}" -gt "0" ]; then
    	echo "${COMPREPLY[*]}"
	else
		echo " " # space terminated the completion
	fi
	return 0
}

case "$1" in
	docker-cli-plugin-metadata)
		docker_cli_plugin_metadata
		;;
	__complete)
		docker volume ls -q | grep -v "^$"
		;;
	*)
		# Check if second argument is help flag
		if [[ "$2" == "--help" || "$2" == "-h" ]]; then
			usage
		else
			docker-volumecd "${@:2}"
		fi
		;;
esac
