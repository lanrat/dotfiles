#!/usr/bin/env bash

docker_cli_plugin_metadata() {
	local vendor="lanrat"
	local description="tail -f for docker services"
	cat <<-EOF
	{"SchemaVersion":"0.1.0","Vendor":"${vendor}","ShortDescription":"${description}"}
EOF
}

usage() {
	echo "Usage: docker tail <container>"
	echo ""
	echo "Continuously tail logs from a Docker container, waiting for it to start if needed."
	echo ""
	echo "Arguments:"
	echo "  container    Name or ID of the container to tail"
}

docker-tail() {
	set -e
	local container="$1"
	if [ -z "$container" ]; then
		usage
		exit 1
	fi

	# Check if container exists and print message once
	if ! docker inspect "$container" >/dev/null 2>&1; then
		echo "Container '$container' does not exist, waiting for it to be created..."
	fi

    while true; do
		until [ "$(docker inspect -f "{{.State.Running}}" "$container" 2>/dev/null)" == "true" ]; do
			sleep 0.1;
		done;
		docker logs --tail=50 -f "$container"
	done
}

case "$1" in
	docker-cli-plugin-metadata)
		docker_cli_plugin_metadata
		;;
	__complete)
		# Return actual container names for completion
		docker ps -a --format '{{.Names}}' | grep -v "^$"
		;;
	*)
		# Check if second argument is help flag
		if [[ "$2" == "--help" || "$2" == "-h" ]]; then
			usage
		else
			docker-tail "$2"
		fi
		;;
esac